rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin(uid) {
      return exists(/databases/$(database)/documents/users/$(uid)) &&
             get(/databases/$(database)/documents/users/$(uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      // Read own doc or any doc if admin
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin(request.auth.uid));

      // Create own doc only as non-admin role (viewer/user); admins may create any
      allow create: if request.auth != null && request.auth.uid == userId &&
        request.resource.data.role in ['user', 'viewer'];
      allow create: if request.auth != null && isAdmin(request.auth.uid);

      // Update own doc but cannot change role; admins may update any
      allow update: if request.auth != null && request.auth.uid == userId &&
        request.resource.data.role == resource.data.role;
      allow update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Files collection - role-based access
    match /files/{fileId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
  exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['user', 'admin'];
      allow update, delete: if request.auth != null && 
  isAdmin(request.auth.uid);
    }
    
    // Requests collection - users can create and read their own, admins can read/update all
    match /requests/{requestId} {
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.requestedBy;
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.requestedBy ||
         isAdmin(request.auth.uid));
      allow update: if request.auth != null && 
        isAdmin(request.auth.uid);
    }

    // Global folder metadata (labels: tags + color)
    match /folders_meta/{docId} {
      // Any signed-in user can read labels
      allow read: if request.auth != null;
      // Only admins can write labels
      allow create, update, delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // Per-user favorites subcollection
    match /users/{userId}/favorites/{favId} {
      // Owner can read/list their own favorites
      allow read: if request.auth != null && request.auth.uid == userId;
      // Owner can manage their own favorites
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}